@page

@using EJ2CoreSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@section Meta{
                    <meta name="description" content="This example demonstrates the Value Sorting in ASP.NET Core Pivot Table control. Explore here for more details."/>
}

@{
    var data = new PivotTableData().GetPivot_Data();
}
@section ControlsSection{

    <div class="control-section">
    <div class="content-wrapper">
        <ejs-pivotview id="pivotview" width="100%" height="300" showFieldList="true" enableValueSorting="true">
            <e-datasourcesettings dataSource="@data" expandAll="false" enableSorting="true">
                <e-formatsettings>
                    <e-field name="Amount" format="C0" maximumSignificantDigits="10" minimumSignificantDigits="1" useGrouping="true"></e-field>
                </e-formatsettings>
                <e-rows>
                    <e-field name="Country"></e-field>
                    <e-field name="Products"></e-field>
                </e-rows>
                <e-columns>
                    <e-field name="Year"></e-field>
                    <e-field name="Order_Source" caption="Order Source"></e-field>
                </e-columns>
                <e-values>
                    <e-field name="In_Stock" caption="In Stock"></e-field>
                    <e-field name="Sold" caption="Units Sold"></e-field>
                    <e-field name="Amount" caption="Sold Amount"></e-field>
                </e-values>
                <e-filters>
                    <e-field name="Product_Categories" caption="Product Categories"></e-field>
                </e-filters>
                <e-valuesortsettings headerText="FY 2015##In Stock" headerDelimiter="##" sortOrder="Descending"></e-valuesortsettings>
            </e-datasourcesettings>
            <e-gridSettings columnWidth="140"></e-gridSettings>
        </ejs-pivotview>
    </div>
</div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }
        .sb-sample-content-area {
            min-height: 255px !important;
        }
        .control-section {
            min-height: 255px !important;
        }
    </style>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
   <div id="action-description">
       <p>
           This sample demonstrates ordering of values in ascending or descending order. Here, the <b>FY 2015 -> In Stock</b> column header
           text is ordered by defining sort-related settings in code behind.
       </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            You can sort column values by clicking the column header. Clicking the same header once again will reverse the sorting
            direction. It can be enabled by setting the <code>enableValueSorting</code> as true.
        </p>
        <p>
            Value sort-related settings can be defined in code behind, too. To do so, headers of the column to be sorted are given
            in the
            <code>headerText</code> property under
            <code>valueSortSettings</code>, separated by a delimiter string. The purpose of providing complete header text here is to indicate exactly which
            value column needs to be sorted. The string which is used to separate the headers is given in the property
            <code>headerDelimiters</code>. The sorting direction is performed by the
            <code>sortOrder</code> property.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Pivot Table Value Sorting Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Value Sorting in ASP.NET Core Pivot Table Control</h1>
                }
@page
@model EJ2CoreSampleBrowser.Pages.Chart.BoxandWhiskerModel
@using Syncfusion.EJ2

@section ControlsSection{

    <div class="col-lg-12 control-section" align="center">
        <ejs-chart id="container" title="Employees Age Group in Various Departments"
                   load="load" pointRender="pointRender">
            <e-chart-primaryxaxis valueType="@Syncfusion.EJ2.Charts.ValueType.Category" interval="1">
                <e-majorgridlines width="0"></e-majorgridlines>
                <e-majorticklines width="0"></e-majorticklines>
            </e-chart-primaryxaxis>
            <e-chart-primaryyaxis minimum="10" maximum="60" interval="10" title="Age">
                <e-majorgridlines width="1"></e-majorgridlines>
                <e-majorticklines width="0"></e-majorticklines>
                <e-linestyle width="0"></e-linestyle>
            </e-chart-primaryyaxis>
            <e-chart-tooltipsettings enable="true" header="">
            </e-chart-tooltipsettings>
            <e-chart-legendsettings visible="false">
            </e-chart-legendsettings>
            <e-chart-chartarea>
                <e-chartarea-border width="0"></e-chartarea-border>
            </e-chart-chartarea>
            <e-series-collection>
                <e-series dataSource="@Model.ChartPoints" xName="Department" yName="Age"
                          name="Department" type="@Syncfusion.EJ2.Charts.ChartSeriesType.BoxAndWhisker" boxPlotMode="Normal">
                    <e-series-marker visible="true" height="7" width="7"></e-series-marker>
                </e-series>
            </e-series-collection>
        </ejs-chart>
    </div>

    <script src="~/scripts/chart/financial-data.js"></script>
    <script type="text/javascript">
        function load(args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5'));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
            args.chart.primaryXAxis.labelIntersectAction = ej.base.Browser.isDevice ? 'None' : 'Rotate45';
            args.chart.primaryXAxis.labelRotation = ej.base.Browser.isDevice ? -45 : 0;
        }
        function pointRender(args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Fluent2';
            var materialColors = ["#00bdae", "#404041", "#357cd2", "#e56590", "#f8b883", "#70ad47", "#dd8abd", "#7f84e8", "#7bb4eb",
                "#ea7a57", "#404041", "#00bdae"];
            var fabricColors = ["#4472c4", "#ed7d31", "#ffc000", "#70ad47", "#5b9bd5",
                "#c1c1c1", "#6f6fe2", "#e269ae", "#9e480e", "#997300", "#4472c4", "#70ad47", "#ffc000", "#ed7d31"];
            var bootstrapColors = ["#a16ee5", "#f7ce69", "#55a5c2", "#7ddf1e", "#ff6ea6",
                "#7953ac", "#b99b4f", "#407c92", "#5ea716", "#b91c52"];
            var highContrastColors = ["#79ECE4", "#E98272", "#DFE6B6", "#C6E773", "#BA98FF",
                "#FA83C3", "#00C27A", "#43ACEF", "#D681EF", "#D8BC6E"];
            var fluentColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',
                '#7D39C0'];
            var fluentDarkColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',
                '#7D39C0'];
            var fluent2Colors = ["#6200EE", "#09AF74", "#0076E5", "#CB3587", "#E7910F", "#0364DE", "#66CD15", "#F3A93C", "#107C10", "#C19C00"];
            var fluent2HighContrastColors = ["#9BB449", "#2A72D5", "#43B786", "#3F579A", "#584EC6", "#E85F9C", "#6E7A89", "#EA6266", "#0B6A0B", "#C19C00"];
            if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
                args.fill = fabricColors[args.point.index % 10];
            } else if (selectedTheme === 'material') {
                args.fill = materialColors[args.point.index % 10];
            } else if (selectedTheme === 'highcontrast') {
                args.fill = highContrastColors[args.point.index % 10];
            } else if (selectedTheme === 'fluent') {
                args.fill = fluentColors[args.point.index % 10];
            } else if (selectedTheme === 'fluent-dark') {
                args.fill = fluentDarkColors[args.point.index % 10];
            } else if (selectedTheme === 'fluent2') {
                args.fill = fluent2Colors[args.point.index % 10];
            } else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {
                args.fill = fluent2HighContrastColors[args.point.index % 10];
            } else {
                args.fill = bootstrapColors[args.point.index % 10];
            }
        }
    </script>
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This <a target="_blank" href="https://www.syncfusion.com/aspnet-core-ui-controls/charts/chart-types/box-and-whisker-chart" aria-label="Navigate to explore the syncfusion ASP.NET Core Box and Whisker Chart">ASP.NET Core Box and Whisker Chart</a> example visualizes the employee’s age group in various departments of a company with box and whisker chart.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to render and configure a box and whisker chart or box plot. This chart is used to visualize a group of numerical data through their data quartiles. Box plots may also have lines extending vertically from the boxes (whiskers) indicating variability outside the upper and lower quartiles. <code>Marker</code> and <code>DataLabel</code> are used to represent individual data and its values.
        </p>
        <p>
            <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch enabled devices.
        </p>
        <p>
            More information about the box and whisker series can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/chart/chart-types/box-whisker" aria-label="Navigate to the documentation for Box and Whisker in ASP.NET Core Chart control">documentation section</a>.
        </p>
    </div>
}
@*custom code start*@
@section Scripts{
}

<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@section Meta{
    <meta name="description" content="This example demonstrates the Box and Whisker in ASP.NET Core Chart control. Explore here for more details." />
}
@*custom code end*@
@section Title{
    <title>ASP.NET Core Chart Box and Whisker Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Box and Whisker in ASP.NET Core Chart Control</h1>
}

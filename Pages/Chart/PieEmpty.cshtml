@page
@using Syncfusion.EJ2
@section ControlsSection{
    @{
        var Drop = "Drop";
        var data = new string[] { "Drop", "Average", "Zero" };
    }
    <div class="col-lg-8 control-section">
        <ejs-accumulationchart id="container" title="Annual Product-Wise Profit Analysis" load="load" enableSmartLabels="false" enableBorderOnMouseMove="false" textRender="textRender">
            <e-accumulationchart-tooltipsettings enable="true" header="" format="<b>${point.x}</b><br> Profit: <b>$${point.y}K</b>"></e-accumulationchart-tooltipsettings>
            <e-accumulationchart-legendsettings visible="false">
            </e-accumulationchart-legendsettings>
            <e-accumulation-series-collection>
                <e-accumulation-series xName="Product" yName="ProfitPercentage" name="Profit" radius="80%">
                    <e-accumulationseries-datalabel position="@Syncfusion.EJ2.Charts.AccumulationLabelPosition.Inside" enableRotation="true" visible="true">
                        <e-font fontWeight="600"></e-font>
                    </e-accumulationseries-datalabel>
                    <e-accumulationseries-emptypointsettings fill="#e6e6e6"></e-accumulationseries-emptypointsettings>
                </e-accumulation-series>
            </e-accumulation-series-collection>
        </ejs-accumulationchart>
    </div>
    <div class="col-lg-4 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 50%">
                        <div>
                            Empty Point Mode:
                        </div>
                    </td>
                    <td style="width: 50%;">
                        <ejs-dropdownlist id="emptypointmode" dataSource="@data" value="Drop" change="onChange" index="0" popupHeight="220px"></ejs-dropdownlist>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <script>
        function load(args) {
            var indexedTheme = location.hash.split('/')[1];
            indexedTheme = indexedTheme ? indexedTheme : 'Fluent2';
            args.accumulation.theme = (indexedTheme.charAt(0).toUpperCase() + indexedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5'));
            args.accumulation.dataSource = [
                { Product : "Rice",  ProfitPercentage : 80 },
                { Product : "Wheat", ProfitPercentage : null },
                { Product : "Oil",   ProfitPercentage : 70 },
                { Product : "Corn",  ProfitPercentage : 60 },
                { Product : "Gram",  ProfitPercentage : null },
                { Product : "Milk",  ProfitPercentage : 70 },
                { Product : "Peas",  ProfitPercentage : 80 },
                { Product : "Fruit", ProfitPercentage : 60 },
                { Product : "Butter",ProfitPercentage : null }
            ];
            if ((indexedTheme.replace(/5.3/i, '5')) === 'bootstrap5-dark') {
                args.chart.series[0].emptyPointSettings.fill = '#FF7F7F';
            }
        }

        function onChange(args) {
            var pie = document.getElementById("container").ej2_instances[0];
            pie.series[0].emptyPointSettings.mode = this.value;
            pie.refresh();
        }

        function textRender(args){
            args.text = args.point.x + ": $" + args.point.y + "K";
        }
    </script>
}

@*custom code start*@
<style>

    #control-container {
        padding: 0px !important;
    }
</style>
@*custom code end*@
@section ActionDescription{

    <div id="action-description">
        <p>
            This sample illustrates the annual product-wise profit analysis of an organization with empty point functionality in the pie series.
        </p>
    </div>
}
@section Description {
    <div id="description">
        <p>
            In this example, you can see how to render and configure the pie series with empty points. The empty point in the chart can be handled using the <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.Charts.AccumulationSeries.html#Syncfusion_EJ2_Charts_AccumulationSeries_EmptyPointSettings" aria-label="Navigate to the EmptyPointSettings property reference for ASP.NET Core AccumulationSeries">EmptyPointSettings</a> property.
        </p>
        <p>
            <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
        </p>
        <p>
            More information about the empty points can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/accumulation-chart/empty-points" aria-label="Navigate to the documentation for empty-points in ASP.NET Core accumulation-chart">documentation section</a>.
        </p>
    </div>

}
@section Title{
                    <title>ASP.NET Core Chart Empty Points Example - Syncfusion Demos </title>
                }
@section Meta{
                    <meta name="description" content="This example demonstrates the Empty Points in ASP.NET Core Chart control. Explore here for more details."/>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Empty Points in ASP.NET Core Chart Control</h1>
                }
@page
@model EJ2CoreSampleBrowser.Pages.Chart.CategoryAxisModel
@using Syncfusion.EJ2

@section ControlsSection{
    <div class="control-section">
        <div id="container" align='center'>
            <ejs-chart id="lineContainer" title="Internet Users – 2016" load="load" pointRender="labelRender">
                <e-chart-legendsettings visible="false"></e-chart-legendsettings>
                <e-chart-chartarea>
                    <e-chartarea-border width="0"></e-chartarea-border>
                </e-chart-chartarea>
                <e-chart-primaryxaxis valueType="@Syncfusion.EJ2.Charts.ValueType.Category" enableTrim="false">
                    <e-majorgridlines width="0"></e-majorgridlines>
                    <e-majorticklines width="0"></e-majorticklines>
                </e-chart-primaryxaxis>
                <e-chart-primaryyaxis minimum=0 maximum=800
                                      edgeLabelPlacement="@Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift" labelFormat="{value}M">
                    <e-majorgridlines width="0"></e-majorgridlines>
                    <e-majorticklines width="0"></e-majorticklines>
                    <e-linestyle width="0"></e-linestyle>
                    <e-labelstyle color="Transparent"></e-labelstyle>
                </e-chart-primaryyaxis>
                <e-series-collection>
                    <e-series dataSource="@Model.ChartPoints" name="Users" xName="Country" width="2" tooltipMappingName="TooltipMappingName" yName="Users" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Bar">
                        <e-series-marker>
                            <e-series-datalabel visible="true" position="@Syncfusion.EJ2.Charts.LabelPosition.Top">
                                <e-font color="#ffffff" fontWeight="600"></e-font>
                            </e-series-datalabel>
                        </e-series-marker>
                    </e-series>
                </e-series-collection>
            </ejs-chart>
        </div>
    </div>

    <script>
        function labelRender(args) {
            var selectedTheme = themeName ? themeName : 'Fluent2';
            var materialColors = ['#00bdae', '#404041', '#357cd2', '#e56590', '#f8b883', '#70ad47', '#dd8abd', '#7f84e8', '#7bb4eb',
                '#ea7a57', '#404041', '#00bdae'];
            var fabricColors = ['#4472c4', '#ed7d31', '#ffc000', '#70ad47', '#5b9bd5',
                '#c1c1c1', '#6f6fe2', '#e269ae', '#9e480e', '#997300', '#4472c4', '#70ad47', '#ffc000', '#ed7d31'];
            var bootstrapColors = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6',
                '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];
            var highContrastColors = ['#79ECE4', '#E98272', '#DFE6B6', '#C6E773', '#BA98FF',
                '#FA83C3', '#00C27A', '#43ACEF', '#D681EF', '#D8BC6E'];
            var fluentColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D', '#7D39C0'];
            var fluentDarkColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D', '#7D39C0'];
            var fluent2Colors = ["#6200EE", "#09AF74", "#0076E5", "#CB3587", "#E7910F", "#0364DE", "#66CD15", "#F3A93C", "#107C10",
                "#C19C00"];
            var fluent2HighContrastColors = ["#9BB449", "#2A72D5", "#43B786", "#3F579A", "#584EC6", "#E85F9C", "#6E7A89", "#EA6266",
                "#0B6A0B", "#C19C00"];
            var tailwindColors = ["rgba(90, 97, 246, 0.5)", "rgba(101, 163, 13, 0.5)", "rgba(51, 65, 85, 0.5)", "rgba(20, 184, 166, 0.5)", "rgba(139, 92, 246, 0.5)", "rgba(3, 105, 161, 0.5)", "rgba(249, 115, 22, 0.5)",
                "rgba(147, 51, 234, 0.5)", "rgba(245, 158, 11, 0.5)", "rgba(21, 128, 61, 0.5)"];
            var tailwindDarkColors = ["#8B5CF6", "#22D3EE", "#F87171", "#4ADE80", "#E879F9", "#FCD34D", "#F97316", "#2DD4BF", "#F472B6", "#10B981"];
            var tailwind3Colors = ['#2F4074', '#03B4B4', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#2F4074', '#03B4B4'];
            var tailwind3DarkColors = ['#8029F1', '#1ABC9C', '#0D72DE', '#FF5733', '#D63384', '#F39C12', '#EF291F', '#91C822', '#8029F1', '#1ABC9C'];
            if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
                args.fill = fabricColors[args.point.index % 10];
            }
            else if (selectedTheme === 'material') {
                args.fill = materialColors[args.point.index % 10];
            }
            else if (selectedTheme === 'highcontrast') {
                args.fill = highContrastColors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent') {
                args.fill = fluentColors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent-dark') {
                args.fill = fluentDarkColors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent2') {
                args.fill = fluent2Colors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent2-highcontrast' || selectedTheme === 'fluent2-dark') {
                args.fill = fluent2HighContrastColors[args.point.index % 10];
            }
            else if (selectedTheme === 'tailwind') {
                args.fill = tailwindColors[args.point.index % 10];
            }
            else if (selectedTheme === 'tailwind-dark') {
                args.fill = tailwindDarkColors[args.point.index % 10];
            } else if (selectedTheme === 'tailwind3') {
                args.fill = tailwind3Colors[args.point.index % 10];
            } else if (selectedTheme === 'tailwind3-dark') {
                args.fill = tailwind3DarkColors[args.point.index % 10];
            }
            else {
                args.fill = bootstrapColors[args.point.index % 10];
            }
        };

        function load(args) {
            var indexedTheme = themeName ? themeName : 'Fluent2';
            args.chart.theme = (indexedTheme.charAt(0).toUpperCase() + indexedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast').replace(/5.3/i, '5'));
            args.chart.series[0].marker.dataLabel.font.size = ej.base.Browser.isDevice ? '9px' : '11px';
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
        }
    </script>
}
@*custom code start*@

@section Meta{
    <meta name="description" content="This example demonstrates the Category Axis in ASP.NET Core Chart control. Explore here for more details." />
}
@*custom code end*@
@section ActionDescription{
    <p>
        This sample shows a category axis in a chart with details about internet users across different countries.
    </p>
}
@section Description{
    <div id="description">
        <p>
            You can use the category axis to represent string values instead of numbers in the chart. To use the category axis, set <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.Charts.ChartAxis.html#Syncfusion_EJ2_Charts_ChartAxis_ValueType" aria-label="Navigate to the ValueType property reference for ASP.NET Core Chart axis">ValueType</a> in axis to <b>Category</b>.
        </p>
        <p>
            More information about the category axis can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/chart/category-axis" aria-label="Navigate to the documentation for category-axis in ASP.NET Core Chart control">documentation section</a>.
        </p>
    </div>
}
@section Title{
    <title>ASP.NET Core Chart Category Axis Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Category Axis in ASP.NET Core Chart Control</h1>
}

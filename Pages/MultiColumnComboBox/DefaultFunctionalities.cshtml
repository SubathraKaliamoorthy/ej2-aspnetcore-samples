@page
@model EJ2CoreSampleBrowser.Pages.MultiColumnComboBox.DefaultFunctionalitiesModel
@using Syncfusion.EJ2

@section ControlsSection {
    <div class="col-lg-8 control-section">
        <div class="control-wrapper">
            <div style='padding-top:50px;'>
                <ejs-multicolumncombobox id="default" dataSource="@Model.workers" popupHeight="230px"
                    placeholder="Select a name" value="HR" text="John Smith" change="valueChange">
                    <e-multicolumncombobox-fields text="Name" value="Department"></e-multicolumncombobox-fields>
                    <e-multicolumncombobox-columns>
                        <e-multicolumncombobox-column field="Name" header="Name" width="90"></e-multicolumncombobox-column>
                        <e-multicolumncombobox-column field="Position" header="Position" width="85"></e-multicolumncombobox-column>
                        <e-multicolumncombobox-column field="Department" header="Department" width="98"></e-multicolumncombobox-column>
                        <e-multicolumncombobox-column field="PhoneNo" header="Phone No" width="105"></e-multicolumncombobox-column>
                        <e-multicolumncombobox-column field="Location" header="Location" width="98"></e-multicolumncombobox-column>
                    </e-multicolumncombobox-columns>
                </ejs-multicolumncombobox>
            </div>
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <table id="property" title="Properties" style="width: 100%; margin:10px">
            <tr>
                <td class="left-side">Value</td>
                <td>:<span id='value' class="right-side"></span></td>
            </tr>
            <tr>
                <td class="left-side">Text</td>
                <td>:<span id='text' class="right-side"></span></td>
            </tr>
        </table>
    </div>
    <!-- custom code start -->
    <style>
        .control-wrapper {
            margin: 0 auto;
            width: 500px;
        }

        @@media screen and (max-width: 480px) {
            .control-wrapper {
                width: 300px;
            }
        }

        .property-section .right-side {
            padding-left: 10px;
        }

        .property-section .left-side {
            padding: 5px;
            width: 25%
        }
    </style>
    <!-- custom code end-->
    <script>
        function valueChange() {
            var muliticolumnObj = document.getElementById('default').ej2_instances[0];
            var value = document.getElementById('value');
            var text = document.getElementById('text');
            value.innerHTML = muliticolumnObj.value ? muliticolumnObj.value.toString() : 'null';
            text.innerHTML = muliticolumnObj.text ? muliticolumnObj.text.toString() : 'null';
        }
    </script>
}
@section Scripts {
    <script>
        valueChange();
    </script>
}

@section Meta {
    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET Core MultiColumn ComboBox control. Explore here for more details." />
}
@section ActionDescription {
    <div id="action-description">
        <p>
            This sample demonstrates the default functionalities of the MultiColumn ComboBox. The <code>MultiColumn ComboBox</code> component allows the user to select an employee from a list while displaying multiple columns of data simultaneously.
        </p>
    </div>
}
@section Description {
    <div id="description">
        <p>
            In the above sample, type any character in the MultiColumn ComboBox element or click the dropdown icon to choose an employee from the <code>options</code> list. The selected item's <code>value</code> and <code>text</code> property values will be shown in the property panel.
        </p>
    </div>
}
@section Title {
    <title>ASP.NET Core MultiColumn ComboBox Default Functionalities Example - Syncfusion Demos </title>
}
@section Header {
    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET Core MultiColumn ComboBox Control</h1>
}
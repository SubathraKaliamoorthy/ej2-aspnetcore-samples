@page

@using Syncfusion.EJ2

@{
    var items = new[]
    {
        "Bold", "Italic", "Underline", "|", "Formats", "Alignments",
        "OrderedList", "UnorderedList", "|", "CreateLink", "Image", "|", "SourceCode", "Undo", "Redo"
    };
}

@section ControlsSection{
<div class="col-lg-8 control-section">
    <div class="content-wrapper" id="all-option-sample">
        <div class="control-section">
            <ejs-richtexteditor id="default" saveInterval=5000 enablePersistence=true placeholder="Start to type a content to save" created="onCreate" change="updateStatus">
                <e-richtexteditor-toolbarsettings items="@items"></e-richtexteditor-toolbarsettings>
                <e-content-template>
                    <p>
                        Type or edit the content to be saved automatically in the editor
                    </p>
                </e-content-template>
            </ejs-richtexteditor>
            <div id='statusEle' class='current-status'>
                <div id='saving' style="display: none">
                    <div class="e-icons e-icon-refresh"> </div>
                    <p class='status-text'> Saving changes</p>
                </div>
                <div id='saved' style="display: none">
                    <span class="e-icons e-icon-tick"> </span>
                    <p class='status-text'>Changes saved</p>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-lg-4 property-section" id="all-option-table">
    <table id="property" title="Properties">
        <tbody>
            <tr>
                <td style="width: 50%">
                    <label for="checked" style="padding: 10px 70px 10px 0"> Auto Save</label>
                </td>
                <td style="width: 50%;padding-right: 10px">
                    <div>
                        <ejs-switch id="checked" change="onChange" checked="true"></ejs-switch>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<script>
    var rteObj;
    function updateStatus() {
        document.getElementById('saving').style.display = 'block';
        document.getElementById('saved').style.display = 'none';
        setTimeout(() => {
            if (!ej.base.isNullOrUndefined(document.getElementById('saving')) && !ej.base.isNullOrUndefined(document.getElementById('saved'))) {
                document.getElementById('saving').style.display = 'none';
                document.getElementById('saved').style.display = 'block';
            }
        }, 500);
    }
    function onCreate() {
        rteObj = this;
    }
    function onChange(e) {

        if (e.checked) {
            rteObj.saveInterval = 5000;
        } else {
            rteObj.saveInterval = 0;
            setTimeout(() => {
                document.getElementById('saving').style.display = 'none';
                document.getElementById('saved').style.display = 'none';
            }, 500);
  }
    }
</script>
<style>
    .current-status {
        float: right;
        padding: 11px;
        margin-right: 22px;
        font-size: 12px;
        display: inline-block;
    }

    .e-icons.e-icon-refresh::before {
        content: "\e606";
    }

    .e-icons.e-icon-tick::before {
        content: "\e614";
    }

    .bootstrap4 .e-icons.e-icon-refresh::before {
        content: "\e710";
    }
    
    .bootstrap4 .e-icons.e-icon-tick::before {
        content: "\e718";
    }

    .tailwind .e-icons.e-icon-refresh::before,
    .tailwind-dark .e-icons.e-icon-refresh::before {
        content: "\e711";
    }

    .tailwind .e-icons.e-icon-tick::before,
    .tailwind-dark .e-icons.e-icon-tick::before {
        content: "\e75d";
    }

    .bootstrap5 .e-icons.e-icon-refresh::before,
    .bootstrap5-dark .e-icons.e-icon-refresh::before,
    .fluent .e-icons.e-icon-refresh::before,
    .fluent-dark .e-icons.e-icon-refresh::before,
    .fluent2 .e-icons.e-icon-refresh::before,
    .fluent2-dark .e-icons.e-icon-refresh::before {
        content: "\e706";
    }

    .bootstrap5 .e-icons.e-icon-tick::before,
    .bootstrap5-dark .e-icons.e-icon-tick::before,
    .fluent .e-icons.e-icon-tick::before,
    .fluent-dark .e-icons.e-icon-tick::before,
    .fluent2 .e-icons.e-icon-tick::before,
    .fluent2-dark .e-icons.e-icon-tick::before {
        content: "\e774";
    }

    .status-text {
        padding: 4px;
    }

    .e-icon-refresh {
        width: 10px;
        display: inline-block;
        animation: spin 2s linear infinite;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }


    .status-text {
        font-size: 14px;
        display: inline-block;
    }
</style>
}


@*custom code start*@

@section Description{
    <div id="description">
    <p>The Rich Text Editor provides options to save its content automatically using the ‘saveInterval’ property. By
        default, the save interval time has 10 seconds from built-in support, but it can be customizable as per the
        application needs. The interval is calculated based on editing the content and does not considered on idle
        state.</p>
    <p>We have configured save interval as 5 seconds in this example. You can save the content in server also using this
        ‘auto save’ option.</p>
    <p>When you disable this 'Auto Save' option in a sample, the value will be saved on focus-out from the editor.</p>
    <p>Rich Text Editor content will be automatically saved when you focus out the editor.</p>
</div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Auto Save in ASP.NET Core Rich Text Editor control. Explore here for more details."/>
                }

@section ActionDescription{
<div id="action-description">
    <p>Demonstrates how to save the Rich Text Editor’s content automatically with periodic interval. When you type or
        edit the content, it will be saved automatically by every 5 seconds. </p>
</div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET Core Rich Text Editor Auto Save Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Auto Save in ASP.NET Core Rich Text Editor Control</h1>
                }

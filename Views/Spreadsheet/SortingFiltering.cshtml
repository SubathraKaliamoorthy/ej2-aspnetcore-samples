@using Syncfusion.EJ2

@section ControlsSection{
    <div class="control-section">
        <ejs-spreadsheet id="spreadsheet" openUrl="SortOpen" saveUrl="SortSave" created="createdHandler">
            <e-spreadsheet-sheets>
                <e-spreadsheet-sheet name="Employee Details">
                    <e-spreadsheet-ranges>
                        <e-spreadsheet-range dataSource="ViewBag.FilteringData" showFieldAsHeader="true"></e-spreadsheet-range>
                    </e-spreadsheet-ranges>
                    <e-spreadsheet-columns>
                        <e-spreadsheet-column width="110"></e-spreadsheet-column>
                        <e-spreadsheet-column width="142"></e-spreadsheet-column>
                        <e-spreadsheet-column width="80"></e-spreadsheet-column>
                        <e-spreadsheet-column width="137"></e-spreadsheet-column>
                        <e-spreadsheet-column width="122"></e-spreadsheet-column>
                        <e-spreadsheet-column width="92"></e-spreadsheet-column>
                        <e-spreadsheet-column width="124"></e-spreadsheet-column>
                    </e-spreadsheet-columns>
                </e-spreadsheet-sheet>
            </e-spreadsheet-sheets>
        </ejs-spreadsheet>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Sorting and Filtering in ASP.NET Core Spreadsheet control. Explore here for more details."/>
                }

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates sorting and filtering feature using employee details.
        </p>
    </div>

}

@section Description{
    <div id="description">
        <p>
            In this demo, sorting is applied to B(Employee Name) column in ascending order using <code>sort</code> method.
            The sort order can be specified in <code>order</code> property with following values `Ascending` or `Descending` and its
            default value is `Ascending`.

            The sorted data is filtered with value 'Services' in `D` column using <code>filter</code> method on <code>sortComplete</code>
            event.
        </p>
        <p>
            More information about sorting and filtering feature can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/spreadsheet/getting-started-core" aria-label="documentation section">
                documentation
            </a> section.
        </p>
    </div>
}

<script>
    function createdHandler() {
        var excelObj = this;
        excelObj.cellFormat({ textAlign: 'center', fontWeight: 'bold' }, 'A1:G1');
        // Sorted B(Employee Name field) column in ascending order
        excelObj.sort({ sortDescriptors: { field: 'B' } }, 'A2:G51').then(function () {
            // Filtered D(Department  field) column with value 'Services'
        excelObj.applyFilter([{ field: 'D', operator: 'equal', value: 'Services' }], 'A1:G51');
        });
        excelObj.numberFormat('m/d/yyyy', 'E2:E51');
        excelObj.numberFormat('$#,##0.00', 'F2:F51');
    }
</script>

@*custom code start*@

<style>
    .control-section {
        height: 550px;
    }

    #sb-content .e-spreadsheet .e-tab .e-tab-text {
        display: inherit;
    }
</style>

@*custom code end*@
@section Title{
                    <title>ASP.NET Core Spreadsheet Sorting and Filtering Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Sorting and Filtering in ASP.NET Core Spreadsheet Control</h1>
                }
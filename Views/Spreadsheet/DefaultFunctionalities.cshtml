@using Syncfusion.EJ2

@section ControlsSection{
    <div class="control-section">
        <ejs-spreadsheet id="spreadsheet" openUrl="Open" saveUrl="Save" created="createdHandler">
            <e-spreadsheet-sheets>
                <e-spreadsheet-sheet name="Car Sales Report">
                    <e-spreadsheet-ranges>
                        <e-spreadsheet-range dataSource="ViewBag.DefaultData"></e-spreadsheet-range>
                    </e-spreadsheet-ranges>
                    <e-spreadsheet-rows>
                        <e-spreadsheet-row>
                            <e-spreadsheet-cells>
                                <e-spreadsheet-cell value="Customer Name"></e-spreadsheet-cell>
                                <e-spreadsheet-cell index=3 value="Payment Mode"></e-spreadsheet-cell>
                                <e-spreadsheet-cell value="Delivery Date"></e-spreadsheet-cell>
                            </e-spreadsheet-cells>
                        </e-spreadsheet-row>
                        <e-spreadsheet-row index=30>
                            <e-spreadsheet-cells>
                                <e-spreadsheet-cell index=4 value="Total Amount:">
                                    <e-spreadsheet-cellstyle fontWeight="Bold" textAlign="Right"></e-spreadsheet-cellstyle>
                                </e-spreadsheet-cell>
                                <e-spreadsheet-cell formula="=SUM(F2:F30)">
                                    <e-spreadsheet-cellstyle fontWeight="Bold"></e-spreadsheet-cellstyle>
                                </e-spreadsheet-cell>
                            </e-spreadsheet-cells>
                        </e-spreadsheet-row>
                    </e-spreadsheet-rows>
                    <e-spreadsheet-columns>
                        <e-spreadsheet-column width="180"></e-spreadsheet-column>
                        <e-spreadsheet-column width="130"></e-spreadsheet-column>
                        <e-spreadsheet-column width="130"></e-spreadsheet-column>
                        <e-spreadsheet-column width="180"></e-spreadsheet-column>
                        <e-spreadsheet-column width="130"></e-spreadsheet-column>
                        <e-spreadsheet-column width="120"></e-spreadsheet-column>
                    </e-spreadsheet-columns>
                </e-spreadsheet-sheet>
            </e-spreadsheet-sheets>
        </ejs-spreadsheet>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET Core Spreadsheet control. Explore here for more details."/>
                }

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the <code>Spreadsheet</code> component and its features such as editing, formulas,
            formatting, importing, and exporting.
        </p>
    </div>

}

@section Description{
    <div id="description">
        <p>
            The <code>Spreadsheet</code> component is used to organize and analyze data in tabular format.
            It has a built-in calculation library that supports most commonly used formulas. Excel workbook files can be
            imported and exported by providing <code>openUrl</code> &
            <code>saveUrl</code> property.
        </p>
        <p>
            Data binding can be achieved by setting a list objects or an instance of Data Manager to the
            <code>dataSource</code> property under the <code>ranges</code> of sheet. The <code>cellFormat</code> and
            <code>numberFormat</code>
            methods are used to apply format to a range of cells in the <code>dataBound</code> event.
        </p>
        <p>
            More information about the Spreadsheet component can be found in this
            <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/spreadsheet/getting-started-core" aria-label="documentation section">
                documentation
            </a> section.
        </p>
    </div>
}

<script>
    function createdHandler() {
        //Applied style and number formatting to range of the active sheet
        this.cellFormat({ fontWeight: 'bold', textAlign: 'center', verticalAlign: 'middle' }, 'A1:F1');
        // Apply format to the specified range in the active sheet.
        this.numberFormat('$#,##0.00', 'F2:F31');
        this.numberFormat('m/d/yyyy', 'E2:E30');
    }
</script>

@*custom code start*@

<style>
    .control-section {
        height: 550px;
    }
    #sb-content .e-spreadsheet .e-tab .e-tab-text {
        display: inherit;
    }
</style>

@*custom code end*@
@section Title{
                    <title>ASP.NET Core Spreadsheet Default Functionalities Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET Core Spreadsheet Control</h1>
                }